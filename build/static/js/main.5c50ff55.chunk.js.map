{"version":3,"sources":["Book.js","BookShelf.js","ListBooks.js","utils/BooksAPI.js","SearchBooks.js","PageNotFound.js","App.js","registerServiceWorker.js","index.js"],"names":["Book","book","this","props","className","imageLinks","style","width","height","backgroundImage","thumbnail","value","shelf","onChange","event","target","moveBookToShelf","disabled","title","authors","join","Component","BookShelf","shelfName","booksOnShelf","map","id","ListBooks","booksOnShelves","books","filter","newBooks","wantToRead","currentlyReading","read","Link","to","api","token","localStorage","Math","random","toString","substr","headers","update","fetch","method","body","JSON","stringify","then","res","json","search","query","maxResults","data","SearchBooks","state","searchBooks","myBooks","BooksAPI","trim","error","setState","b","filteredBook","type","placeholder","i","PageNotFound","BooksApp","concat","Switch","Route","exact","path","render","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","BrowserRouter","document","getElementById","URL","process","origin","addEventListener","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5c50ff55.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Book extends Component {\n\n    render(){\n\n        const {book} = this.props\r\n\n        let moveBookToShelf = (shelf) => (\n            this.props.moveBookToShelf(book,shelf)\n        )\n\n        return (\n            <div className='book'>\n                <div className='book-top'>\r\n                    {book.imageLinks ? <div className='book-cover' style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.thumbnail})`}}></div>\n                                     : <div className='book-cover-unavailable'></div>}\n                    <div className='book-shelf-changer'>\n                        <select value={book.shelf}\n                                onChange={(event) => moveBookToShelf(event.target.value)}>\n                            <option value='moveTo' disabled>Move to...</option>\n                            <option value='currentlyReading'>Currently Reading</option>\n                            <option value='wantToRead'>Want to Read</option>\n                            <option value='read'>Read</option>\n                            <option value='none'>None</option>\n                        </select>\n                    </div>\n                </div>\n                <div className='book-title'>{book.title}</div>\n                <div className='book-authors'>\n                    {book.authors && book.authors.join(', ')}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Book\n","import React, { Component} from 'react'\nimport Book from './Book'\n\nclass BookShelf extends Component{\n    render(){\n\n        const {shelfName,booksOnShelf} = this.props\n\n        return(\n            <div className='bookshelf'>\n                <h2 className='bookshelf-title'>{shelfName}</h2>\n                <div className='bookshelf-books'>\n                    <ol className='books-grid'>\r\n                        <li>\r\n                            {booksOnShelf.map((book) => (\n                                <Book key={book.id} book={book}\n                                              moveBookToShelf={(book,shelf)=>this.props.moveBookToShelf(book,shelf)}/>))}\n                        </li>\n                    </ol>\r\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default BookShelf\n","import React, { Component} from 'react'\r\nimport BookShelf from './BookShelf'\nimport { Link } from 'react-router-dom'\n\nclass ListBooks extends Component {\r\n\r\n    booksOnShelves = (books,shelf) => {\r\n        let filteredBooks = books.filter((newBooks) => newBooks.shelf === shelf)\r\n        return filteredBooks\r\n    }\r\n\r\n    render() {\n\r\n        const {books} = this.props\r\n\r\n        const wantToRead = books.filter(book => book.shelf === 'wantToRead')\r\n        const currentlyReading = books.filter(book => book.shelf === 'currentlyReading')\r\n        const read = books.filter(book => book.shelf === 'read')\r\n\n        return (\n            <div className='list-books'>\n                <div className='list-books-title'>\n                    <h1>My Reads</h1>\n                </div>\n                <div className='list-books-content'>\n                    <div>\r\n                          <BookShelf shelfName='Currently Reading'\r\n                                   booksOnShelf={currentlyReading}\r\n                                   moveBookToShelf={(book,shelf)=>this.props.moveBookToShelf(book,shelf)}/>\r\n                          <BookShelf shelfName='Want to Read'\r\n                                     booksOnShelf={wantToRead}\r\n                                     moveBookToShelf={(book,shelf)=>this.props.moveBookToShelf(book,shelf)}/>\r\n                          <BookShelf shelfName='Read'\r\n                                     booksOnShelf={read}\r\n                                     moveBookToShelf={(book,shelf)=>this.props.moveBookToShelf(book,shelf)}/>\r\n                    </div>\n                </div>\n                <div className='open-search'>\n                    <Link to='/search'>Add a book</Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListBooks\n","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query, maxResults })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Book from './Book'\r\nimport * as BooksAPI from './utils/BooksAPI'\r\n\r\nconst MAX_RESULTS = 14\r\n\nclass SearchBooks extends Component {\r\n\r\n    state = {\r\n        books: []\r\n    }\r\n\r\n    searchBooks = (query,myBooks) => {\r\n        if(query){\r\n            BooksAPI.search(query.trim(), MAX_RESULTS).then((books) => {\r\n                if(books.error){\r\n                    this.setState({books: []})\r\n                } else {\r\n                    books.filter(b => {\r\n                          let filteredBook = myBooks.filter(book => book.id===b.id)\r\n                          if(filteredBook && filteredBook[0]){\r\n                              b.shelf = filteredBook[0].shelf\r\n                          } else {\r\n                              b.shelf = 'none'\r\n                          }\r\n                          return b\r\n                    })\r\n                    this.setState(state =>({books : books}))\r\n                }\r\n\r\n            })\r\n        } else{\r\n            this.setState({books: []})\r\n        }\r\n    }\r\n\n    render(){\r\n\r\n        const {myBooks} = this.props\r\n\n        return(\n            <div className='search-books'>\n                <div className='search-books-bar'>\n                    <Link className='close-search' to='/'>Close</Link>\n                    <div className='search-books-input-wrapper'>\n                        <input type='text'\n                               placeholder='Search by title or author'\n                               onChange = {(event) => this.searchBooks(event.target.value,myBooks)}/>\r\n                    </div>\n                </div>\n                <div className='search-books-results'>\n                    <ol className='books-grid'>\n                        <li>\n                            {this.state.books.map((book,i) =>\r\n                                (<Book key={i} book={book}\n                                               moveBookToShelf={(book,shelf)=>this.props.moveBookToShelf(book,shelf)}/>)\n                            )}\n                        </li>\n                    </ol>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchBooks\n","import React, { Component } from 'react'\r\n\r\nclass PageNotFound extends Component {\r\n\r\n    render(){\r\n        return (\r\n                  <div className='page-not-found'/>\r\n              )\r\n          }\r\n}\r\n\r\nexport default PageNotFound\r\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport ListBooks from './ListBooks'\nimport SearchBooks from './SearchBooks'\nimport PageNotFound from './PageNotFound'\nimport * as BooksAPI from './utils/BooksAPI'\nimport './App.css';\n\nclass BooksApp extends Component {\n\n    state = {\n        books: []\n    }\n\n    componentDidMount(){\n        BooksAPI.getAll().then((books) => {\n            this.setState({books})\n        })\n    }\n\n    moveBookToShelf = (book,shelf) => {\n        if (book.shelf !== shelf) {\n          BooksAPI.update(book, shelf).then(() => {\n            book.shelf = shelf\n\n            this.setState(state => ({\n              books: state.books.filter(b => b.id !== book.id).concat([ book ])\n            }))\n          })\n        }\n    }\n\n    render() {\n        return (\n            <div className='app'>\n                <Switch>\n                    <Route exact path='/' render= {() => (\n                        <ListBooks books= {this.state.books}\n                                   moveBookToShelf= {(book,shelf) => this.moveBookToShelf(book,shelf)}/>\n                    )}></Route>\n                    <Route path='/search' render= {() => (\n                        <SearchBooks myBooks= {this.state.books}\n                                     moveBookToShelf= {(book,shelf) => this.moveBookToShelf(book,shelf)}/>\n                    )}></Route>\n                    <Route component = {PageNotFound}/>\n                </Switch>\n            </div>\n        )\n    }\n}\n\nexport default BooksApp;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport BooksApp from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <BooksApp />\n    </BrowserRouter>,\n    document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}